!function(){"use strict";function e(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?n:r}function t(t,r){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";r.preventDefault();const o=r.submitter,s=o.textContent;e(o,!0,s,n),t().then((()=>r.target.reset())).catch(console.error).finally((()=>e(o,!1,s)))}const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};function n(e,t,r){const n=e.querySelector(`#${t.id}-error`);n.textContent="",n.classList.remove(r.errorClass),t.classList.remove(r.inputErrorClass)}function o(e,t){Array.from(e.querySelectorAll(t.inputSelector)).forEach((r=>{n(e,r,t)}))}function s(e,t){0!==e.length&&(e.some((e=>!e.validity.valid))?i(t):a(t))}function a(e){e.disabled=!1}function i(e){e.disabled=!0}const c=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_getResult(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._getResult)}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}getUser(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editUserAvatar(e){let{avatar:t}=e;return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})})}postCard(e){let{name:t,link:r}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}removeCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}likeCard(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers})}dislikeCard(e){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"6a49bc73-4cbf-41b7-bd3f-9c47b1919869","Content-Type":"application/json"}}),l=document.querySelector(".profile"),d=l.querySelector(".profile__avatar"),u=l.querySelector(".profile__name"),m=l.querySelector(".profile__about"),_=l.querySelector("#profile-btn"),h=l.querySelector("#avatar-btn");function f(e){u.textContent=e.name,m.textContent=e.about}function v(e){d.src=e.avatar}function y(e,t,r){r?t.forEach((e=>{r[e.id]?e.value=r[e.id]:e.reset()})):e.reset()}function S(e){const t={};return e.forEach((e=>{t[e.id]=e.value})),t}let b;function q(e){"Escape"===e.key&&C(b)}function p(e){e.currentTarget===e.target&&C(b)}function E(e){b=e,e.classList.add("modal_opened"),document.addEventListener("keydown",q)}function C(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",q)}_.addEventListener("click",(function(){y(k,U,{name:u.textContent,about:m.textContent}),o(k,r),i(g),E(L)})),h.addEventListener("click",(function(){E(A)})),c.getUser().then((function(e){f(e),v(e)})).catch(console.error),Array.from(document.querySelectorAll(".modal")).forEach((e=>{e.addEventListener("mousedown",p),e.querySelector(".modal__exit-btn").addEventListener("click",(()=>C(e)))}));const L=document.querySelector("#profile-modal"),k=document.forms["profile-form"],g=L.querySelector(".modal__button"),U=L.querySelectorAll(".modal__input");k.addEventListener("submit",(function(e){t((function(){return c.editUserInfo(S(U)).then((e=>{f(e),i(g),C(L)}))}),e)}));const A=document.querySelector("#avatar-modal"),$=document.forms["avatar-form"],x=A.querySelectorAll(".modal__input");$.addEventListener("submit",(function(e){t((function(){return c.editUserAvatar(S(x)).then((e=>{v(e),y($,x),C(A)}))}),e)}));const T=document.querySelector("#post-modal"),P=document.forms["post-form"],w=T.querySelectorAll(".modal__input");let D,I;P.addEventListener("submit",(function(e){t((function(){return c.postCard(S(w)).then((e=>{G(e),C(T),y(P,w)}))}),e)})),document.querySelector(".profile__post-btn").addEventListener("click",(()=>E(T)));const N=document.querySelector("#delete-modal"),O=document.forms["delete-form"],j=N.querySelector("#delete-btn"),B=N.querySelector("#cancel-btn");O.addEventListener("submit",(function(e){t((function(){return c.removeCard(I).then((()=>{D.remove(),C(N)}))}),e,"Deleting...")})),B.addEventListener("click",(()=>C(N)));const J=document.querySelector("#image-modal"),H=J.querySelector(".modal__image"),R=J.querySelectorAll(".modal__caption"),z="#card-template";function M(e,t){!0===t?e.classList.add("card__like-icon_selected"):e.classList.remove("card__like-icon_selected")}const F=document.querySelector(".card-container");function G(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=function(e,t){const r=e.name,n=e.link,o=e._id;let s=e.isLiked;const i=document.querySelector(t).content.querySelector(".card").cloneNode(!0);i.querySelector(".card__text").textContent=r;const l=i.querySelector(".card__image");l.src=n,l.alt=r,l.addEventListener("click",(()=>{!function(e){H.src=e.link,H.alt=e.name,R.textContent=e.name}(e),E(J)}));const d=i.querySelector(".card__like-icon");return M(d,s),d.addEventListener("click",(()=>{s?(M(d,!1),c.dislikeCard(o).then((()=>{s=!1})).catch(console.error).finally((()=>{M(d,s)}))):(M(d,!0),c.likeCard(o).then((()=>{s=!0})).catch(console.error).finally((()=>{M(d,s)})))})),i.querySelector(".card__trash-icon").addEventListener("click",(()=>{D=i,I=o,a(j),E(N)})),i}(e,z);F[t](r)}var K;c.getInitialCards().then((e=>e.forEach((e=>G(e))))).catch(console.error),K=r,Array.from(document.querySelectorAll(K.formSelector)).forEach((e=>{!function(e,t){const r=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);s(r,a),r.forEach((o=>{o.addEventListener("input",(()=>{!function(e,t,r){t.validity.valid?n(e,t,r):function(e,t,r,n){const o=e.querySelector(`#${t.id}-error`);o.textContent=r,o.classList.add(n.errorClass),t.classList.add(n.inputErrorClass)}(e,t,t.validationMessage,r)}(e,o,t),s(r,a)}))})),e.addEventListener("reset",(()=>{o(e,t),i(a)}))}(e,K)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,